var explanations = {
    '!': '',
    '"': 'String parsing',
    '#': 'String to number',
    '$': 'Take object from lower stack up',
    '%': 'Modulous',
    '&': 'Get element from array',
    '\'': 'Character literal',
    '': 'Decrement',
    ')': 'Increment',
    '*': 'Multiplication',
    '+': 'Addition',
    ',': 'Range',
    '-': 'Subtraction',
    '.': 'Clone the top of the stack',
    '/': 'Division',
    '0': 'Push 0',
    '1': 'Push 1',
    '2': 'Push 2',
    '3': 'Push 3',
    '4': 'Push 4',
    '5': 'Push 5',
    '6': 'Push 6',
    '7': 'Push 7',
    '8': 'Push 8',
    '9': 'Push 9',
    ':': 'Assign to variable',
    ';': 'Pop top value of stack',
    '<': 'Less than',
    '=': 'Equal to',
    '>': 'Greater than',
    '?': 'If????',
    '@': 'Rotate top three items on stack',
    'A': 'Push 10',
    'B': 'Push 11',
    'C': 'Push 12',
    'D': 'Push 13',
    'E': 'Push 14',
    'F': 'Push 15',
    'G': 'Push alphabet',
    'H': 'Macro for `[Q`',
    'I': 'Macro for `[i`',
    'J': 'Magic var',
    'K': 'Magic var',
    'L': 'Lambda (Push next character as a standalone CodeBlock',
    'M': 'Macro for `[i~`',
    'N': 'Push blank CodeBlock',
    'O': '',
    'P': '',
    'Q': 'Input var',
    'R': '',
    'S': 'Blank String',
    'T': 'String with space `" "`',
    'U': 'Newline string `"\n"`',
    'V': '_Commonly used for variables_',
    'W': 'Push 32',
    'X': 'Push 33',
    'Y': 'Push 34',
    'Z': 'Push 35',
    '[': 'Start array',
    '\\': 'Swap two objects on stack',
    ']': 'End array',
    '^': '**Power?**',
    '_': 'Negate',
    '`': 'Reverse String',
    'a': '',
    'b': '',
    'c': 'Compress int to string',
    'd': 'For loop',
    'e': 'Is even? / String length',
    'f': '',
    'g': '',
    'h': '',
    'i': 'String input',
    'j': 'Number input',
    'k': '',
    'l': 'Push length of stack',
    'm': 'Math functions',
    'n': 'Used in for loops',
    'o': 'Print object',
    'p': 'Print object with new line',
    'q': 'Push input as string/number',
    'r': '',
    's': 'Split string into char array',
    't': '',
    'u': '',
    'v': '',
    'w': 'While Loop',
    'x': '',
    'y': '',
    'z': '',
    '{': 'Start CodeBlock',
    '|': '',
    '}': 'End CodeBlock',
    '~': 'Eval',
};